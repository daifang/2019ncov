{"version":3,"sources":["js/request.js","js/api.js","components/Count.js","pages/China.js","App.js","reportWebVitals.js","index.js"],"names":["request","url","params","Axios","method","api","getData","Count","className","style","this","getStyle","color","props","config","title1_color","title1","title2_color","title2","count1_color","count1","title3_color","title3","count2","Component","China","state","areaTree","upDateTime","chinaTotal","chinaAdd","dicData","nowConfirm","importedCase","noInfect","confirm","heal","dead","dicColor","document","title","fetchData","name","then","res","data","JSON","parse","console","log","setState","lastUpdateTime","catch","e","key","Object","keys","map","idx","backgroundColor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90f1b968.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\n\r\nexport const request = {\r\n    get : (url,params)=>Axios({\r\n        method:'get',\r\n        url:url,\r\n        params:params\r\n    })\r\n    ,\r\n    post : (url,params)=>Axios({\r\n        method:'POST',\r\n        params:params,\r\n        url:url\r\n    })\r\n}","import {request} from './request'\r\n\r\nconst api = {\r\n    getData: (params)=> request.get('/g2/getOnsInfo',params)\r\n}\r\nexport default api;","import React, { Component } from 'react';\r\nimport './Count.css';\r\nexport default class Count extends Component {\r\n    render() {\r\n        return (\r\n            <div \r\n                className='count'\r\n                style={this.getStyle()}\r\n            >\r\n                <span className='count_title1' style={{color:this.props.config.title1_color}}>{this.props.config.title1}</span>\r\n                <span className='count_title2'>\r\n                    <span style={{color:this.props.config.title2_color}}>{this.props.config.title2}</span>\r\n                    <span style={{color:this.props.config.count1_color}}>{this.props.config.count1}</span>\r\n                </span>\r\n                <span className='count_title3'>\r\n                    <span style={{color:this.props.config.title3_color}}>{this.props.config.title3}</span>\r\n                    <span style={{color:this.props.config.count2>0?'red':'green'}}>{this.props.config.count2}</span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n    getStyle(){\r\n        return this.props.style;\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport api from '../js/api';\r\nimport Count from '../components/Count';\r\nexport default class China extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n          areaTree:{},// 省市\r\n          upDateTime:'',// 最后更新时间\r\n          chinaTotal:{},// 中国总数\r\n          chinaAdd:{}, // 中国新增\r\n          dicData:{\r\n            nowConfirm: '现存确诊',\r\n            importedCase: '境外输入',\r\n            noInfect: '无症状感染者',\r\n            confirm: '累计确诊',\r\n            heal: '累计治愈',\r\n            // nowSevere: '',\r\n            // suspect: '疑似病例',\r\n            dead: '累计死亡',\r\n          },\r\n          dicColor:{\r\n            confirm: '#ffccbc',\r\n            heal: '#dcedc8',\r\n            importedCase: '#fbe9e7',\r\n            noInfect: '#d7ccc8',\r\n            nowConfirm: '#ffe0b2',\r\n            // nowSevere: '',\r\n            // suspect: '#FFFFFF',\r\n            dead: '#9e9e9e',\r\n          },\r\n          title1_color:{\r\n            confirm: '#f4511e',\r\n            heal: '#00c853',\r\n            importedCase: '#f4511e',\r\n            noInfect: '#6d4c41',\r\n            nowConfirm: '#dd2c00',\r\n            // nowSevere: '',\r\n            // suspect: 'black',\r\n            dead: '#fafafa',\r\n          },\r\n          title2_color:{\r\n            confirm: '#f4511e',\r\n            heal: '#00c853',\r\n            importedCase: '#ff5722',\r\n            noInfect: '#795548',\r\n            nowConfirm: '#ff3d00',\r\n            // nowSevere: '',\r\n            // suspect: 'black',\r\n            dead: '#DADADA',\r\n          },count1_color:{\r\n            confirm: '#f4511e',\r\n            heal: '#1b5e20',\r\n            importedCase: '#ff5722',\r\n            noInfect: '#795548',\r\n            nowConfirm: '#ff3d00',\r\n            // nowSevere: '',\r\n            // suspect: 'black',\r\n            dead: '#DADADA',\r\n          },title3_color:{\r\n            confirm: '#f4511e',\r\n            heal: '#00c853',\r\n            importedCase: '#ff7043',\r\n            noInfect: '#795548',\r\n            nowConfirm: '#ff6e40',\r\n            // nowSevere: '',\r\n            // suspect: 'black',\r\n            dead: '#DADADA',\r\n          }\r\n        }\r\n      }\r\n\r\n      componentDidMount(){\r\n        document.title = '中国疫情';\r\n        this.fetchData();\r\n      }\r\n\r\n      fetchData(){\r\n        api.getData({name:'disease_h5'}).then(res=>{\r\n          let data = JSON.parse(res.data.data);\r\n          console.log(data)\r\n          this.setState({\r\n            areaTree:data.areaTree[0],\r\n            upDateTime:data.lastUpdateTime,\r\n            chinaTotal:data.chinaTotal,\r\n            chinaAdd:data.chinaAdd\r\n          });\r\n\r\n        }).catch(e=>console.log(e))\r\n      }\r\n    returnCount(){\r\n        let countArr = [];\r\n        for(let key in this.state.chinaTotal){\r\n\r\n        }\r\n        return countArr;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='count_container'>\r\n                {\r\n                    Object.keys(this.state.dicData).map((key,idx)=>{\r\n                        return(\r\n                            <Count\r\n                                key={key}\r\n                                config={{\r\n                                    title1:this.state.dicData[key],\r\n                                    title2:'当日数量',\r\n                                    title3:'较昨日',\r\n                                    count1:this.state.chinaTotal[key],\r\n                                    count2:this.state.chinaAdd[key]>0?'+'+this.state.chinaAdd[key]:this.state.chinaAdd[key],\r\n                                    title2_color:this.state.title2_color[key],\r\n                                    title1_color:this.state.title1_color[key],\r\n                                    count1_color:this.state.count1_color[key],\r\n                                    title3_color:this.state.title3_color[key],\r\n                                }}\r\n                                style = {{backgroundColor:this.state.dicColor[key]}}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport China from './pages/China';\nexport default class App extends Component {\n\n  render() {\n    return (\n      <div>\n        <China/>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}